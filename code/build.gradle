buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "0.1.4"
group= "cc.littleBits.cloudmod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "bitCraft"

minecraft {
    version = "1.7.10-10.13.4.1448-1.7.10"
    runDir = "eclipse"

    srgExtra "PK: org/eclipse LB/CloudMod/org/eclipse"
    srgExtra "PK: org/json LB/CloudMod/org/json"
    srgExtra "PK: org/apache/http LB/CloudMod/org/apache/http"
}

configurations {
    external
    compile.extendsFrom external
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    external 'org.json:json:20090211'
    external 'org.apache.httpcomponents:httpasyncclient:4.1'
    external 'org.java-websocket:Java-WebSocket:1.3.0'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    configurations.external.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }

    manifest.attributes(
            // results in "Class-Path: guava-15.0.jar"
            'Class-Path': configurations.external.files.collect { it.name }.join(' ')
    )
}

task wrapper(type: Wrapper, group: "Build Setup") {
  description 'Installs the Gradle Wrapper into your project.'
  distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleWrapperVersion}-bin.zip"
}
